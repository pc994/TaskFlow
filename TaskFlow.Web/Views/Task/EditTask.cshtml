@model TaskFlow.Application.ViewModels.Task.AddTaskVm

@{
    ViewData["Title"] = "EditTask";
}

<h4>
    Edit task number:
    @Html.DisplayFor(model => model.Id)
</h4>

<h2>
    @Html.DisplayNameFor(model => model.Name) :
    @Html.DisplayFor(model => model.Name)
</h2>
<hr />
<div class="row">
    <div class="col-md-4">
        <form asp-action="EditTask">
            <div asp-validation-summary="ModelOnly" class="text-danger"></div>
            <div class="form-group">
                <input asp-for="Id" type="hidden" />
            </div>
            <div class="form-group">
                <label asp-for="Name" class="control-label"></label>
                <input asp-for="Name" class="form-control" />
                <span asp-validation-for="Name" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="Description" class="control-label"></label>
                <TextArea asp-for="Description" class="form-control" rows="10"></TextArea>
                <span asp-validation-for="Description" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="CategoryId" class="control-label"></label>
                <select name="CategoryId">
                    @foreach(var category in Model.Categories)
                    {
                        <option value="@category.Id">@category.Name</option>
                    }
                </select>
            </div>
            <div class="form-group">
                <label asp-for="PriorityId" class="control-label"></label>
                <select name="PriorityId">
                    @foreach (var priority in Model.Priorities)
                    {
                        <option value="@priority.Id">@priority.Name</option>
                    }
                </select>
            </div>
            <div class="form-group form-check">
                <label class="form-check-label">
                    <input class="form-check-input" asp-for="IsPublic" /> @Html.DisplayNameFor(model => model.IsPublic)
                </label>
            </div>
            <div class="form-group">
                <label asp-for="ProjectId" class="control-label"></label>
                <select name="ProjectId">
                    @foreach (var project in Model.Projects)
                    {
                        <option value="@project.Id">@project.Name</option>
                    }
                </select>
            </div>
            <div class="form-group">
                <label asp-for="StatusId" class="control-label"></label>
                <select name="StatusId">
                @foreach (var status in Model.Statuses)
                {
                        <option value="@status.Id">@status.Name</option>
                }
                </select>
            </div>
@*            <div class="form-group">
                <label asp-for="AssignedTo" class="control-label"></label>
                <input asp-for="AssignedTo" class="form-control" />
                <span asp-validation-for="AssignedTo" class="text-danger"></span>
            </div>*@
            <div class="form-group">
                <input type="submit" value="Save" class="btn btn-primary" />
            </div>
        </form>
    </div>
</div>

<div>
    <a asp-action="Index">Back to List</a>
</div>

@section Scripts {
    @{
        await Html.RenderPartialAsync("_ValidationScriptsPartial");
    }
}