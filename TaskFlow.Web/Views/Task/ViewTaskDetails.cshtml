@model TaskFlow.Application.ViewModels.Task.TaskDetailsVm

@{
    ViewData["Title"] = "Task details";
}
<div class="task-details">
    <h4>
        @Html.DisplayFor(model => model.Name)
    </h4>
    <div class="div-with-buttons">
        @if (Model.Status.Name == "Closed")
        {
            <h6>Task is closed. No actions available. </h6>
        }
        else
        {
            <a asp-action="EditTask" asp-route-taskId="@Model.Id" class="btn btn-info">Edit task</a>
            <a asp-action="ConfirmClose" asp-route-taskId="@Model.Id" class="btn btn-danger">Close task</a>
        }
        <a asp-action="Index" class="btn bth-close">X</a>
    </div>
    <hr />
    <dl class="row">
        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.Id)
        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.Id)
        </dd>
        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.Name)
        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.Name)
        </dd>
        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.Description)
        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.Description)
        </dd>
        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.Status)
        </dt>
        <dd class="col-sm-2">
            @Html.DisplayFor(model => model.Status.Name)
        </dd>
        <dd class="col-sm-8">
            @if (Model.Status.Name != "Closed")
            {
                <form asp-action="UpdateStatus">
                    <select name="statusId">
                        @foreach (var status in Model.Statuses)
                        {
                            <option value="@status.Id">@status.Name</option>
                        }
                    </select>
                    <input type="hidden" name="taskId" value="@Model.Id" />
                    <button type="submit" class="btn-update">Update</button>
                </form>
            }
        </dd>
        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.Category)
        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.Category.Name)
        </dd>
        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.Priority)
        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.Priority.Name)
        </dd>
        <dt class="col-sm-2">
            Visibility
        </dt>
        <dd class="col-sm-10">
            @if (Model.IsPublic == true)
            {
                <span>Public</span>
            }
            else
            {
                <span>Private</span>
            }
        </dd>
        <dt class="col-sm-2">
            Project Name
        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.Project.Name)
        </dd>
    </dl>
</div>
<hr />
@Html.Partial("_TaskCommentsPartial")

@section Scripts {
    @{
        await Html.RenderPartialAsync("_ValidationScriptsPartial");
    }
}

